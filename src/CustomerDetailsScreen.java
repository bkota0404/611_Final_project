import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class CustomerDetailsScreen extends ItemScreen {
    private JPanel mainPanel;
    private JLabel userID;
    private JLabel name;
    private JPanel accountPanel;
    private JPanel loanPanel;
    private JPanel stockPanel;
    private Customer customer;


    public CustomerDetailsScreen(Bank bank, Customer customer) {
        super(bank);
        this.customer = customer;

        userID.setText(String.valueOf(customer.getUserId()));
        name.setText(customer.getName());
        accountPanel.setLayout(new BoxLayout(accountPanel, BoxLayout.Y_AXIS));
        loanPanel.setLayout(new BoxLayout(loanPanel, BoxLayout.Y_AXIS));
        stockPanel.setLayout(new BoxLayout(stockPanel, BoxLayout.Y_AXIS));
        update();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setContentPane(mainPanel);
        setSize(600, 1000);
        setLocation(400, 100);
        setVisible(true);


    }

    @Override
    public void refresh() {

    }

    private void update() {
        accountPanel.removeAll();
        if (customer.getAccounts() != null) {
            for (Account account : customer.getAccounts()) {
                AccountItem accountItem = new AccountItem(bank, account, this);
                accountItem.getCloseAccountButton().setEnabled(false);
                accountItem.getWithdrawlDepositButton().setEnabled(false);
                accountPanel.add(accountItem.getMainPanel());
            }
        }
        loanPanel.removeAll();
        if (customer.getLoans() != null) {
            for (Loan loan : customer.getLoans()) {
                LoanItem loanItem = new LoanItem(bank, loan, this);
                loanItem.getPayBackLoanButton().setEnabled(false);
                loanPanel.add(loanItem.getMainPanel());
            }
        }
        stockPanel.removeAll();
        if (customer.getCustomerSecurityAcct() != null)
            if (customer.getCustomerSecurityAcct().getStocksPurchased() != null)
                for (StocksPurchased stock : customer.getCustomerSecurityAcct().getStocksPurchased()) {
                    StockPurchasedItem stockPurchasedItem = new StockPurchasedItem(customer, bank, stock, this);
                    stockPurchasedItem.getSellStockButton().setEnabled(false);
                    stockPanel.add(stockPurchasedItem.getMainPanel());
                }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(7, 4, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(2, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        accountPanel = new JPanel();
        accountPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane1.setViewportView(accountPanel);
        final JLabel label1 = new JLabel();
        label1.setText("User ID:");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        mainPanel.add(scrollPane2, new GridConstraints(4, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        loanPanel = new JPanel();
        loanPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane2.setViewportView(loanPanel);
        final JScrollPane scrollPane3 = new JScrollPane();
        mainPanel.add(scrollPane3, new GridConstraints(6, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        stockPanel = new JPanel();
        stockPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane3.setViewportView(stockPanel);
        final JLabel label2 = new JLabel();
        label2.setText("Loans:");
        mainPanel.add(label2, new GridConstraints(3, 0, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Name:");
        mainPanel.add(label3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userID = new JLabel();
        userID.setText("Label");
        mainPanel.add(userID, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        name = new JLabel();
        name.setText("Label");
        mainPanel.add(name, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Accounts:");
        mainPanel.add(label4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Stocks:");
        mainPanel.add(label5, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
