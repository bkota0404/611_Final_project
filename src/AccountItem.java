import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class AccountItem extends UIItem {

    private JPanel mainPanel;
    private Account account;
    private JLabel accountID;
    private JLabel accountType;
    private JLabel currency;
    private JLabel balance;
    private JButton closeAccountButton;
    private JButton withdrawlDepositButton;
    private Bank bank;

    public AccountItem(Bank bank, Account account, ItemScreen parentScreen) {
        super(parentScreen);

        this.bank = bank;
        this.account = account;
        initialize();
        closeAccountButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                if (bank.closeAccount(account)) {
                    JOptionPane.showMessageDialog(mainPanel, "Succeed to close the account.");
                    parentScreen.refresh();
                } else {
                    JOptionPane.showMessageDialog(mainPanel, "Balance not enough to close account.");
                }
            }
        });
        withdrawlDepositButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                new WithDrawlDepositDialog(bank, account, parentScreen);
            }
        });
    }


    private void initialize() {
        accountID.setText(String.valueOf(account.getAccountId()));
        accountType.setText(account.getAccountType().getAccountType());
        currency.setText(account.getCurrency());
        balance.setText(String.valueOf(account.getBalance()));
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JButton getCloseAccountButton() {
        return closeAccountButton;
    }

    public JButton getWithdrawlDepositButton() {
        return withdrawlDepositButton;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 5, new Insets(10, 10, 10, 10), -1, -1));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("Account ID:");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(72, 49), null, 0, false));
        accountID = new JLabel();
        accountID.setText("");
        mainPanel.add(accountID, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(73, 49), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("AccountType:");
        mainPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        accountType = new JLabel();
        accountType.setText("");
        mainPanel.add(accountType, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Currency:");
        mainPanel.add(label3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(40, 49), null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Balance:");
        mainPanel.add(label4, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        currency = new JLabel();
        currency.setText("");
        mainPanel.add(currency, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(42, 49), null, 0, false));
        balance = new JLabel();
        balance.setText("");
        mainPanel.add(balance, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        closeAccountButton = new JButton();
        closeAccountButton.setText("Close Account");
        mainPanel.add(closeAccountButton, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        withdrawlDepositButton = new JButton();
        withdrawlDepositButton.setText("Withdrawl/Deposit");
        mainPanel.add(withdrawlDepositButton, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}